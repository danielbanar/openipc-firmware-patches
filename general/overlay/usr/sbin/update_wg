#!/bin/sh

WG_CONFIG_ORIG="/etc/wireguard.conf"
INTERFACES_FILE="/etc/network/interfaces.d/wg0"
WG_CONFIG_CUSTOM="/root/wireguard"

# Load configuration as shell variables
if [ -e "$WG_CONFIG_CUSTOM" ]; then
    . "$WG_CONFIG_CUSTOM"
else
    echo "Error: Config file $WG_CONFIG_CUSTOM not found."
    exit 1
fi

# Optional control flag
if [ "$enabled" != "true" ]; then
    echo "WireGuard not enabled â€” exiting."
    exit 0
fi

# Validate required vars
for var in domain PrivateKey PublicKey PresharedKey IP; do
    eval val=\$$var
    [ -z "$val" ] && { echo "Error: Missing variable $var in $WG_CONFIG_CUSTOM."; exit 1; }
done

# Resolve domain to IP
RESOLVED_IP=$(nslookup "$domain" | awk '/^Address: / { print $2 }' | tail -n1)
[ -z "$RESOLVED_IP" ] && { echo "Error: Could not resolve $domain"; exit 1; }

# Update /etc/wireguard.conf
if [ -f "$WG_CONFIG_ORIG" ]; then
    sed -i -E "s|^(Endpoint[ \t]*=[ \t]*)[0-9.]+(:[0-9]+)$|\1$RESOLVED_IP\2|" "$WG_CONFIG_ORIG"
    sed -i -E "s|^(PrivateKey[ \t]*=[ \t]*).*$|\1$PrivateKey|" "$WG_CONFIG_ORIG"
    sed -i -E "s|^(PublicKey[ \t]*=[ \t]*).*$|\1$PublicKey|" "$WG_CONFIG_ORIG"
    sed -i -E "s|^(PresharedKey[ \t]*=[ \t]*).*$|\1$PresharedKey|" "$WG_CONFIG_ORIG"
    echo "Updated $WG_CONFIG_ORIG."
else
    echo "Error: $WG_CONFIG_ORIG not found."
    exit 1
fi

# Update /etc/network/interfaces.d/wg0
if [ -f "$INTERFACES_FILE" ]; then
    sed -i -E "s|^( *address[ \t]+)[0-9.]+|\1$IP|" "$INTERFACES_FILE"
    echo "Updated $INTERFACES_FILE."
else
    echo "Error: $INTERFACES_FILE not found."
    exit 1
fi